name: CI

on:
  push:
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  preflight:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        config:
          - { name: Lint, tool: lint }
          - { name: Flow, tool: flow }
    steps:
      - name: Check out the source code
        uses: actions/checkout@v3

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: npm-shrinkwrap.json

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.config.tool }}
        run: npm run '${{ matrix.config.tool }}'

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: preflight
    strategy:
      fail-fast: true
      matrix:
        node-version:
          - 'lts/*'
          - 'lts/-1'
          - current
    steps:
      - name: Check out the source code
        uses: actions/checkout@v3

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: npm-shrinkwrap.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run jest

  publish:
    needs: [test]
    if: github.event_name == 'release' && github.event.action == 'created'
    name: Publish to npm
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Install dependencies
        run: npm run build

      - uses: Automattic/vip-actions/npm-publish@v1
        with:
          release_type: patch
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
