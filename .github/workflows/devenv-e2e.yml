name: E2E Tests for Dev Env

on:
  push:
  workflow_dispatch:

permissions:
  contents: read

env:
  DO_NOT_TRACK: '1'

jobs:
  test:
    name: Run E2E Tests on ${{ matrix.os }}, shard ${{ matrix.shard }}
    strategy:
      fail-fast: false
      matrix:
        shard:
          - 1
          - 2
          - 3
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: npm-shrinkwrap.json

      - name: Install dependencies
        run: npm ci

      - name: Pack and install (Linux/Mac)
        run: |
          npm pack > filename.txt
          npm i -g "$(cat filename.txt)"
        if: ${{ !startsWith(matrix.os, 'windows') }}

      - name: Pack and install (Windows)
        run: |
          npm pack > filename.txt
          npm i -g "$(Get-Content -Raw filename.txt)"
        shell: pwsh
        if: startsWith(matrix.os, 'windows')

      - name: Install Docker CE
        uses: crazy-max/ghaction-setup-docker@v3
        if: startsWith(matrix.os, 'macos')

      - name: Set Docker socket
        run: |
          echo "DOCKER_HOST=$(docker context inspect --format json | jq -r .[].Endpoints.docker.Host)" >> "${GITHUB_ENV}"
        if: startsWith(matrix.os, 'macos')

      - name: Fake docker-compose for Linux/Mac
        run: |
          if ! command -v docker-compose; then
            echo -e '#!/bin/sh\n\nexec docker compose $@' | sudo tee /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            mkdir -p $HOME/.docker/cli-plugins
            wget -q https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-darwin-x86_64 -O $HOME/.docker/cli-plugins/docker-compose
            chmod +x $HOME/.docker/cli-plugins/docker-compose
          fi
        if: ${{ !startsWith(matrix.os, 'windows') }}

      - name: Fake docker-compose for Windows
        run: |
          if not exist "%ProgramFiles%\Docker\docker-compose.exe" (
            echo docker compose %%* > %ProgramFiles%\Docker\docker-compose.bat
          )
        shell: cmd
        if: startsWith(matrix.os, 'windows')

      - name: Preload Docker images
        run: |
          vip dev-env create --app-code image --php 8.0 --mu-plugins image -e false -p true --mailpit true --photon true
          vip dev-env start -w
          vip dev-env destroy

      - name: Run tests
        run: npm run test:e2e:dev-env -- --shard=${{ matrix.shard }}/${{ strategy.job-total }}
